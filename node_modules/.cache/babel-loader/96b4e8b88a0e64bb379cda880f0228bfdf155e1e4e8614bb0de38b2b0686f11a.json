{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\3AM-IT\\\\Documents\\\\Faculdade\\\\Desenvolvimento web 2\\\\my-app\\\\src\\\\pages\\\\Principal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { auth, db } from '../firebaseConfig';\nimport { doc, getDoc } from 'firebase/firestore';\nimport 'Principal.css'; // Criar um arquivo de estilos para o jogo da velha\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Principal = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [gameState, setGameState] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n\n  // Função para buscar dados do usuário\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        const docRef = doc(db, 'users', user.uid);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          setUserData(docSnap.data());\n        }\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Função para checar o vencedor do jogo\n  const checkWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n\n  // Função para lidar com o clique nas células do jogo\n  const handleClick = index => {\n    const squares = [...gameState];\n    if (squares[index] || checkWinner(gameState)) return; // Se já tiver vencedor ou a célula estiver ocupada, ignore\n\n    squares[index] = isXNext ? 'X' : 'O';\n    setGameState(squares);\n    setIsXNext(!isXNext); // Alterna entre X e O\n  };\n\n  // Verifica se há vencedor\n  const winner = checkWinner(gameState);\n  const status = winner ? `Vencedor: ${winner}` : `Próximo jogador: ${isXNext ? 'X' : 'O'}`;\n\n  // Reiniciar o jogo\n  const resetGame = () => {\n    setGameState(Array(9).fill(null));\n    setIsXNext(true);\n  };\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Bem-vindo, \", userData.nome, \" \", userData.sobrenome]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data de Nascimento: \", userData.dataNascimento]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Jogo da Velha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: gameState.map((value, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"square\",\n          onClick: () => handleClick(index),\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: resetGame,\n        children: \"Reiniciar Jogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Principal, \"T3+AbO/IwfKPb1eGOeSmlceYCNw=\");\n_c = Principal;\nexport default Principal;\nvar _c;\n$RefreshReg$(_c, \"Principal\");","map":{"version":3,"names":["React","useEffect","useState","auth","db","doc","getDoc","jsxDEV","_jsxDEV","Principal","_s","userData","setUserData","gameState","setGameState","Array","fill","isXNext","setIsXNext","fetchUserData","user","currentUser","docRef","uid","docSnap","exists","data","checkWinner","squares","lines","i","length","a","b","c","handleClick","index","winner","status","resetGame","children","fileName","_jsxFileName","lineNumber","columnNumber","nome","sobrenome","dataNascimento","className","map","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/3AM-IT/Documents/Faculdade/Desenvolvimento web 2/my-app/src/pages/Principal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { auth, db } from '../firebaseConfig';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport 'Principal.css'; // Criar um arquivo de estilos para o jogo da velha\r\n\r\nconst Principal = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [gameState, setGameState] = useState(Array(9).fill(null));\r\n  const [isXNext, setIsXNext] = useState(true);\r\n  \r\n  // Função para buscar dados do usuário\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        const docRef = doc(db, 'users', user.uid);\r\n        const docSnap = await getDoc(docRef);\r\n        if (docSnap.exists()) {\r\n          setUserData(docSnap.data());\r\n        }\r\n      }\r\n    };\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  // Função para checar o vencedor do jogo\r\n  const checkWinner = (squares) => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Função para lidar com o clique nas células do jogo\r\n  const handleClick = (index) => {\r\n    const squares = [...gameState];\r\n    if (squares[index] || checkWinner(gameState)) return; // Se já tiver vencedor ou a célula estiver ocupada, ignore\r\n\r\n    squares[index] = isXNext ? 'X' : 'O';\r\n    setGameState(squares);\r\n    setIsXNext(!isXNext); // Alterna entre X e O\r\n  };\r\n\r\n  // Verifica se há vencedor\r\n  const winner = checkWinner(gameState);\r\n  const status = winner ? `Vencedor: ${winner}` : `Próximo jogador: ${isXNext ? 'X' : 'O'}`;\r\n\r\n  // Reiniciar o jogo\r\n  const resetGame = () => {\r\n    setGameState(Array(9).fill(null));\r\n    setIsXNext(true);\r\n  };\r\n\r\n  if (!userData) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bem-vindo, {userData.nome} {userData.sobrenome}</h2>\r\n      <p>Data de Nascimento: {userData.dataNascimento}</p>\r\n\r\n      <h3>Jogo da Velha</h3>\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          {gameState.map((value, index) => (\r\n            <button key={index} className=\"square\" onClick={() => handleClick(index)}>\r\n              {value}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"status\">{status}</div>\r\n        <button className=\"reset-button\" onClick={resetGame}>Reiniciar Jogo</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Principal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}